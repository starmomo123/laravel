<?php

namespace App;

use App;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Schema\Blueprint;

class Post extends BaseModel
{
    //反向关联到User表
    public function user()
    {
        return $this->belongsTo('App\User','user_id','id');
    }

    //关联到评论表
    public function comments()
    {
        return $this->hasMany('App\Comment')->orderBy('created_at','desc');
    }

    //一篇文章一个用户只能有一个赞
    public function zan($user_id)
    {
        return $this->hasOne(App\Zan::class)->where('user_id',$user_id);
    }

    //关联到一篇文章有多个赞
    public function zans()
    {
        return $this->hasMany(App\Zan::class);
    }

    //属于某个作者的文章
    public function scopeAuthorBy(Builder $query,$user_id)
    {
        return $query->where('user_id',$user_id);
    }

    //一篇文章有那些专题
    public function postTopics()
    {
        return $this->hasMany(\App\PostTopic::class,'post_id','id');
    }

    //判断某篇文章不在某个专题里面
    public function scopeTopicNotBy(Builder $query,$topic_id)
    {
        return $query->doesntHave('postTopics','and',function($q) use($topic_id){
            $q->where('topic_id',$topic_id);

        });
    }

    //定义一个全局的scope,使他查找每一篇文章时都加上这个条件
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('posts',function (Builder $table){
           $table->whereIn('status',[0,1]);
        });
    }

}